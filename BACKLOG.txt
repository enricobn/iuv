Doing
-------
- IUVTest runjs

Next
-----
- openapi handle reference to another file
- IUVRouter: use window.onhashchange and window.hash instead of href
- runJs
  runJs is not efficient, the getJsToRun function is called on every HTML element!
  But it seems to be testable (add a test for it).
  - option: make the SnabbdomRenderer an object then add a function addJsToRun that is called on Component.runJs
    then the js snippets will be run by the renderer after rendering and cleaned before rendering.
    Problem: we will be tied with the SnabbdomRenderer implementation (we can use a provider (an object) so
    it will be hard coded only in one place), I don't think it's a great problem since I don't think that multiple, switchable,
    implementations will be needed.
    Problem: how can I test it!
  - option: add the addJsToRun function to an interface extended by HTMLRendered then pass it to the components / views that need it.
    The problem is that we must pass the interface to all the chain of views / components to reach the component / view that needs it.
- IDEA plugin:
 - building (buildPlugin) seems not to put classes from dependencies (iuv-openapi-codegen project)
 - activate "Paste Html (IUV)" only if there's some HTML text to paste and it's a kotlin file
 - can I change "safely" the standard paste behavior?
 - doc in README
- doc in README for HTMLtoIUV command line
- rename project iuv-openapi-codegen to iuv-cli
- cli for OpenApi
  - client : pass requestParam in url
  - anonymous enum
  - controller documentation
  - handle multiple servers
  - option to create only client (per api)
  - model file is not "in package": I think is not a bad idea, otherwise I must make a directory with only one file,
    but the IDE complains
- cli for create new project
  - view
  - controller impl
  - client api
  - is settings.gradle.mustache for shared project needed?
- command line tools:
    - can I use build instead of shadowJar?
    - is it correct to sort properties and parameters? For now I have added two parameters to the command line tool,
      by default they are false
- data class for exceptions for client
- ServletRouteMatcher could have a similar Interface of the IUVRouter RouteMatcher
- rename IUVRoute type alias (ParamToView?) and rename RouteMatcher to IUVRoute
- HTML children (InputH for example) inherits all the functions of HTML (body for example) : there must be a coherent tree
- iuv-examples/node_modules are used only for tests. Can I create a node_modules_test and node_modules so I can use them in index.html?
- can I get rid of message wrappers for a child component?