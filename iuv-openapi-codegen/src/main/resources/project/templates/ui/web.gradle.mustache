build.doLast() {

    // Copy kotlin.js and kotlin.meta.js from jar into web directory
    copyConfigurationFiles(configurations.compile)

    // Copy kotlin-test.js and kotlin-test.meta.js from jar into web directory
    copyConfigurationFiles(configurations.testCompile)

    copy {
        includeEmptyDirs = false
        from project.fileTree("build/classes/kotlin/main").files
        into "${web_dir}/classes"
        include "*.js"
        include "*.js.map"
    }

    copy {
        includeEmptyDirs = false
        from project.fileTree("build/classes/kotlin/test").files
        into "${web_dir}/classes"
        include "*.js"
        include "*.js.map"
    }

    copy {
        includeEmptyDirs = false
        from project.file("build/resources/kotlin/test")
        into "${web_dir}"
    }

    copy {
        includeEmptyDirs = false
        from project.fileTree("web")
        into "${web_dir}"
    }

    copy {
        from("${projectDir}/node_modules/snabbdom/dist")
        into "${web_dir}/js"
        include "*.min.js"
    }

}

private Iterable<File> copyConfigurationFiles(Configuration compile) {
    compile.each { File file ->
        copy {
            includeEmptyDirs = false

            from zipTree(file.absolutePath)
            into "${web_dir}/lib"
            include { fileTreeElement ->
                def path = fileTreeElement.path
                (path.endsWith(".js") || path.endsWith(".js.map")) && (path.startsWith("META-INF/resources/") || !path.startsWith("META-INF/"))
            }
        }
    }
}