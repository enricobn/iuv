buildscript {
    ext.springBootVersion = '{{springBootVersion}}'

    repositories {
        mavenCentral()
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}")
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

apply plugin: 'kotlin-platform-jvm'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlinx-serialization'
apply plugin: 'idea'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

dependencies {
    compile project(":{{projectName}}-shared")
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'org.iuv:iuv-core-jvm8:{{iuvVersion}}'
    compile 'org.iuv:iuv-spring:{{iuvVersion}}'

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-devtools')
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
    compile("com.google.code.gson:gson:2.6.2")
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
    runtime('com.h2database:h2')
    
    testCompile "junit:junit:4.12"
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

idea {
    module {
        downloadJavadoc = false
        downloadSources = true
    }
}

bootJar {
    from('static') {
        into('static')
        include '**/*'
    }

}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}